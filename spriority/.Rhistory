identical(sp_list_id[,2], sp_list_sync[,2])==TRUE) {
seq_sync<-id
break}
else {
sp_list_id<-NULL
seq_sync<-NULL}}
#Now check that all species have time_since_first_intro equals to zero
if (is.null(sp_list_id)==FALSE){
time_intervals_sync <- (sp_list_id %>%
arrange(Position_in_sequence, Species_name, Time_since_first_intro) %>%
distinct(Position_in_sequence, Time_since_first_intro))$Time_since_first_intro
if (length(time_intervals_sync)>1 | time_intervals_sync != 0){
sp_list_id<-NULL
seq_rev<-NULL}}
return(list(seq_sync=seq_sync, sp_list_sync=sp_list_id))
}
es_table<-function(x){
#x is a list created by get_effect_sizes
k_reverse<-0
k_sync<-0
for (i in 1:length(x)){
if (is.null(x[[i]]$Reverse$row_control_reverse)==FALSE){
k_reverse<-k_reverse+1
n<-nrow(x[[i]]$Reverse$es_reverse)
if (length(x[[i]]$Reverse$sp_prior)==0){x[[i]]$Reverse$sp_prior <- NA}
if (k_reverse==1) {data_reverse<-data.frame(x[[i]]$Reverse$es_reverse,
Sp_prior=x[[i]]$Reverse$sp_prior,
Sp_target=x[[i]]$Reverse$sp_target,
row_ref=x[[i]]$Reverse$row_control_reverse,
row_target=x[[i]]$Reverse$row_target)}
else {data_reverse<-rbind(data_reverse, data.frame(x[[i]]$Reverse$es_reverse,
Sp_prior=x[[i]]$Reverse$sp_prior,
Sp_target=x[[i]]$Reverse$sp_target,
row_ref=x[[i]]$Reverse$row_control_reverse,
row_target=x[[i]]$Reverse$row_target))}}
if (is.null(x[[i]]$Sync$row_control_sync)==FALSE){
k_sync<-k_sync+1
if (length(x[[i]]$Sync$sp_prior)==0){x[[i]]$Sync$sp_prior <- NA}
if (k_sync==1) {data_sync<-data.frame(x[[i]]$Sync$es_sync,
Sp_prior=paste(x[[i]]$Sync$sp_prior, collapse="_"),
Sp_target=paste(x[[i]]$Sync$sp_target, collapse="_"),
row_ref=x[[i]]$Sync$row_control_sync,
row_target=x[[i]]$Sync$row_target)}
else {data_sync<-rbind(data_sync, data.frame(x[[i]]$Sync$es_sync,
Sp_prior=paste(x[[i]]$Sync$sp_prior, collapse="_"),
Sp_target=paste(x[[i]]$Sync$sp_target, collapse="_"),
row_ref=x[[i]]$Sync$row_control_sync,
row_target=x[[i]]$Sync$row_target))}}
}
data_reverse$reference_scenario<-"Reverse"
data_sync$reference_scenario<-"Synchronous"
data<-rbind(data_reverse, data_sync)
data<-data[order(data$Paper_ID, data$Observation_ID),]
return(data)
}
standardise_time_units<-function(data, time="Days"){
#data is the data sheet with raw data from sPriority database
#time can be either "Hours", "Days", "Weeks", "Months" or "Years"
for (i in 1:nrow(data)){
if (time=="Hours"){
#Time_intro
if (data$Time_intro_units[i]=="Hour(s)"){}
if (data$Time_intro_units[i]=="Day(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*24
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*24
data$Time_intro_units[i]<-"Hour(s)"
}
if (data$Time_intro_units[i]=="Week(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*7*24
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*7*24
data$Time_intro_units[i]<-"Hour(s)"
}
if (data$Time_intro_units[i]=="Month(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*30.5*24
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*30.5*24
data$Time_intro_units[i]<-"Hour(s)"
}
if (data$Time_intro_units[i]=="Year(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*365*24
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*365*24
data$Time_intro_units[i]<-"Hour(s)"
}
#Time_after_start
if (data$Time_after_start_units[i]=="Hour(s)"){}
if (data$Time_after_start_units[i]=="Day(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*24
data$Time_after_start_units[i]<-"Hour(s)"
}
if (data$Time_after_start_units[i]=="Week(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*7*24
data$Time_after_start_units[i]<-"Hour(s)"
}
if (data$Time_after_start_units[i]=="Month(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*30.5*24
data$Time_after_start_units[i]<-"Hour(s)"
}
if (data$Time_after_start_units[i]=="Year(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*365*24
data$Time_after_start_units[i]<-"Hour(s)"
}
#Experiment_duration
if (data$Experiment_duration_units[i]=="Hour(s)"){}
if (data$Experiment_duration_units[i]=="Day(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*24
data$Experiment_duration_units[i]<-"Hour(s)"
}
if (data$Experiment_duration_units[i]=="Week(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*7*24
data$Experiment_duration_units[i]<-"Hour(s)"
}
if (data$Experiment_duration_units[i]=="Month(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*30.5*24
data$Experiment_duration_units[i]<-"Hour(s)"
}
if (data$Experiment_duration_units[i]=="Year(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*365*24
data$Experiment_duration_units[i]<-"Hour(s)"
}
}
if (time=="Days"){
#Time_intro
if (data$Time_intro_units[i]=="Hour(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/24
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/24
data$Time_intro_units[i]<-"Day(s)"
}
if (data$Time_intro_units[i]=="Day(s)"){}
if (data$Time_intro_units[i]=="Week(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*7
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*7
data$Time_intro_units[i]<-"Day(s)"
}
if (data$Time_intro_units[i]=="Month(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*30.5
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*30.5
data$Time_intro_units[i]<-"Day(s)"
}
if (data$Time_intro_units[i]=="Year(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*365
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*365
data$Time_intro_units[i]<-"Day(s)"
}
#Time_after_start
if (data$Time_after_start_units[i]=="Hour(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/24
data$Time_after_start_units[i]<-"Day(s)"
}
if (data$Time_after_start_units[i]=="Day(s)"){}
if (data$Time_after_start_units[i]=="Week(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*7
data$Time_after_start_units[i]<-"Day(s)"
}
if (data$Time_after_start_units[i]=="Month(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*30.5
data$Time_after_start_units[i]<-"Day(s)"
}
if (data$Time_after_start_units[i]=="Year(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*365
data$Time_after_start_units[i]<-"Day(s)"
}
#Experiment_duration
if (data$Experiment_duration_units[i]=="Hour(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/24
data$Experiment_duration_units[i]<-"Day(s)"
}
if (data$Experiment_duration_units[i]=="Day(s)"){}
if (data$Experiment_duration_units[i]=="Week(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*7
data$Experiment_duration_units[i]<-"Day(s)"
}
if (data$Experiment_duration_units[i]=="Month(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*30.5
data$Experiment_duration_units[i]<-"Day(s)"
}
if (data$Experiment_duration_units[i]=="Year(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*365
data$Experiment_duration_units[i]<-"Day(s)"
}
}
if (time=="Weeks"){
#Time_intro
if (data$Time_intro_units[i]=="Hour(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/24/7
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/24/7
data$Time_intro_units[i]<-"Week(s)"
}
if (data$Time_intro_units[i]=="Day(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/7
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/7
data$Time_intro_units[i]<-"Week(s)"
}
if (data$Time_intro_units[i]=="Week(s)"){}
if (data$Time_intro_units[i]=="Month(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*30.5/7
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*30.5/7
data$Time_intro_units[i]<-"Week(s)"
}
if (data$Time_intro_units[i]=="Year(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*365/7
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*365/7
data$Time_intro_units[i]<-"Week(s)"
}
#Time_after_start
if (data$Time_after_start_units[i]=="Hour(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/24/7
data$Time_after_start_units[i]<-"Week(s)"
}
if (data$Time_after_start_units[i]=="Day(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/7
data$Time_after_start_units[i]<-"Week(s)"
}
if (data$Time_after_start_units[i]=="Week(s)"){}
if (data$Time_after_start_units[i]=="Month(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*30.5/7
data$Time_after_start_units[i]<-"Week(s)"
}
if (data$Time_after_start_units[i]=="Year(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*365/7
data$Time_after_start_units[i]<-"Week(s)"
}
#Experiment_duration
if (data$Experiment_duration_units[i]=="Hour(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/24/7
data$Experiment_duration_units[i]<-"Week(s)"
}
if (data$Experiment_duration_units[i]=="Day(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/7
data$Experiment_duration_units[i]<-"Week(s)"
}
if (data$Experiment_duration_units[i]=="Week(s)"){}
if (data$Experiment_duration_units[i]=="Month(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*30.5/7
data$Experiment_duration_units[i]<-"Week(s)"
}
if (data$Experiment_duration_units[i]=="Year(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*365/7
data$Experiment_duration_units[i]<-"Week(s)"
}
}
if (time=="Months"){
#Time_intro
if (data$Time_intro_units[i]=="Hour(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/24/30.5
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/24/30.5
data$Time_intro_units[i]<-"Month(s)"
}
if (data$Time_intro_units[i]=="Day(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/30.5
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/30.5
data$Time_intro_units[i]<-"Month(s)"
}
if (data$Time_intro_units[i]=="Week(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*7/30.5
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*7/30.5
data$Time_intro_units[i]<-"Month(s)"
}
if (data$Time_intro_units[i]=="Month(s)"){}
if (data$Time_intro_units[i]=="Year(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*12
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*12
data$Time_intro_units[i]<-"Month(s)"
}
#Time_after_start
if (data$Time_after_start_units[i]=="Hour(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/24/30.5
data$Time_after_start_units[i]<-"Month(s)"
}
if (data$Time_after_start_units[i]=="Day(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/30.5
data$Time_after_start_units[i]<-"Month(s)"
}
if (data$Time_after_start_units[i]=="Week(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*7/30.5
data$Time_after_start_units[i]<-"Month(s)"
}
if (data$Time_after_start_units[i]=="Month(s)"){}
if (data$Time_after_start_units[i]=="Year(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*12
data$Time_after_start_units[i]<-"Month(s)"
}
#Experiment_duration
if (data$Experiment_duration_units[i]=="Hour(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/24/30.5
data$Experiment_duration_units[i]<-"Month(s)"
}
if (data$Experiment_duration_units[i]=="Day(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/30.5
data$Experiment_duration_units[i]<-"Month(s)"
}
if (data$Experiment_duration_units[i]=="Week(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*7/30.5
data$Experiment_duration_units[i]<-"Month(s)"
}
if (data$Experiment_duration_units[i]=="Month(s)"){}
if (data$Experiment_duration_units[i]=="Year(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*12
data$Experiment_duration_units[i]<-"Month(s)"
}
}
if (time=="Years"){
#Time_intro
if (data$Time_intro_units[i]=="Hour(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/24/365
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/24/365
data$Time_intro_units[i]<-"Year(s)"
}
if (data$Time_intro_units[i]=="Day(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/365
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/365
data$Time_intro_units[i]<-"Year(s)"
}
if (data$Time_intro_units[i]=="Week(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]*7/365
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]*7/365
data$Time_intro_units[i]<-"Year(s)"
}
if (data$Time_intro_units[i]=="Month(s)"){
data$Time_since_first_intro[i]<-data$Time_since_first_intro[i]/12
data$Time_since_last_intro[i]<-data$Time_since_last_intro[i]/12
data$Time_intro_units[i]<-"Year(s)"
}
if (data$Time_intro_units[i]=="Year(s)"){}
#Time_after_start
if (data$Time_after_start_units[i]=="Hour(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/24/365
data$Time_after_start_units[i]<-"Year(s)"
}
if (data$Time_after_start_units[i]=="Day(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/365
data$Time_after_start_units[i]<-"Year(s)"
}
if (data$Time_after_start_units[i]=="Week(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]*7/365
data$Time_after_start_units[i]<-"Year(s)"
}
if (data$Time_after_start_units[i]=="Month(s)"){
data$Time_after_start[i]<-data$Time_after_start[i]/12
data$Time_after_start_units[i]<-"Year(s)"
}
if (data$Time_after_start_units[i]=="Year(s)"){}
#Experiment_duration
if (data$Experiment_duration_units[i]=="Hour(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/24/365
data$Experiment_duration_units[i]<-"Year(s)"
}
if (data$Experiment_duration_units[i]=="Day(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/365
data$Experiment_duration_units[i]<-"Year(s)"
}
if (data$Experiment_duration_units[i]=="Week(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]*7/365
data$Experiment_duration_units[i]<-"Year(s)"
}
if (data$Experiment_duration_units[i]=="Month(s)"){
data$Experiment_duration[i]<-data$Experiment_duration[i]/12
data$Experiment_duration_units[i]<-"Year(s)"
}
if (data$Experiment_duration_units[i]=="Year(s)"){}
}
}
return(data)}
library(tidyverse)
library(metafor)
library(readr)
spriority_data <- as.data.frame(read.csv("~/Research/sPriority/Meta-analysis/sPriority_database/sPriority_observations_papers_species_04Oct2024.csv")[,2:66])
sub <- spriority_data |>
filter(Paper_ID == 6)
(seq <- reconstruct_sequence(i=9,
data=sub))
sub <- spriority_data |>
filter(Paper_ID == 6)
(rev <- find_reverse_scenario(data=sub,
sp_list=seq,
pos_target=2,
pos_rev=1,
paper=6,
envir=1))
seq[1:2,]
(rev <- find_reverse_scenario(data=sub,
sp_list=seq[1:2,],
pos_target=2,
pos_rev=1,
paper=6,
envir=1))
seq[1:2,]
data=sub
sp_list=seq[1:2,]
pos_target=2
pos_rev=1
paper=6
envir=1
sp_list_rev<-sp_list[,1:2]
sp_list_rev
index_pos<-which(sp_list$Position_in_sequence==pos_target)
index_pos
index_k<-which(sp_list$Position_in_sequence==pos_rev)
index_k
sp_list_rev$Position_in_sequence[index_pos]<-pos_rev
sp_list_rev$Position_in_sequence[index_k]<-pos_target
sp_list_rev <- sp_list_rev %>%
arrange(Position_in_sequence, Species_name)
sp_list_rev
sp_list <- seq
sp_list_rev<-sp_list[,1:2]
index_pos<-which(sp_list$Position_in_sequence==pos_target)
index_k<-which(sp_list$Position_in_sequence==pos_rev)
sp_list_rev$Position_in_sequence[index_pos]<-pos_rev
sp_list_rev$Position_in_sequence[index_k]<-pos_target
sp_list_rev <- sp_list_rev %>%
arrange(Position_in_sequence, Species_name)
sp_list_rev
reconstruct_sequence <- function(i, data){
#Get infos about observation
paper<-data$Paper_ID[i] #Get paper ID
envir<-data$Environment_ID[i] #Get environment ID
seq<-data$Sequence_ID[i] #Get sequence ID
time<-data$Time_after_start[i] #Get time point
sp<-data$Species_name[i] #Get species name
pos<-data$Position_in_sequence[i] #Get position in sequence
duration<-data$Experiment_duration[i] #Time interval between first intro event and end of the experiment
response <- data$Variable_name[i] #Variable name
time_since_first_intro <- data$Time_since_first_intro[i] #Time lag since first introduction
time_since_last_intro <- data$Time_since_last_intro[i] #Time lag since first introduction
#Get species list for inoculation sequence in environment
sp_list<-data %>%
filter(Paper_ID==paper & Sequence_ID==seq & Environment_ID==envir) %>%
select(Position_in_sequence, Species_name, Time_since_first_intro, Time_since_last_intro) %>%
arrange(Position_in_sequence, Species_name, Time_since_first_intro, Time_since_last_intro) %>%
distinct(Position_in_sequence, Species_name, Time_since_first_intro, Time_since_last_intro)
return(sp_list)
}
sub <- spriority_data |>
filter(Paper_ID == 6)
(seq <- reconstruct_sequence(i=9,
data=sub))
View(spriority_data)
results <- spriority_data[,2:4]
View(results)
results$test <- NA
reconstruct_sequence(i=1,
data=spriority_data)
reconstruct_sequence(i=2,
data=spriority_data)
anyDuplicated(c(1,1,2))
anyDuplicated(c(1,2))
for (i in 1:nrow(spriority_data)){
seq <- reconstruct_sequence(i=i,
data=spriority_data)
if (anyDuplicated(seq$Position_in_sequence)==0) {results$test[i] <- 0}
else {results$test[i] <- 1}
}
reconstruct_sequence(i=29,
data=spriority_data)
results <- spriority_data[,2:4]
results$test <- NA
for (i in 1:nrow(spriority_data)){
seq <- reconstruct_sequence(i=i,
data=spriority_data)
if (anyDuplicated(seq$Position_in_sequence)==0) {results$test[i] <- 0}
else {
for (j in unique(seq$Position_in_sequence)){
index <- which(seq$Position_in_sequence == j)
if (length(unique(seq$Time_since_first_intro[index])) > 1){
results$test[i] <- 1
break
}
}
results$test[i] <- 1}
}
results <- spriority_data[,2:4]
results$test <- NA
for (i in 1:nrow(spriority_data)){
seq <- reconstruct_sequence(i=i,
data=spriority_data)
if (anyDuplicated(seq$Position_in_sequence)==0) {results$test[i] <- 0}
else {
for (j in unique(seq$Position_in_sequence)){
index <- which(seq$Position_in_sequence == j)
if (length(unique(seq$Time_since_first_intro[index])) > 1){
results$test[i] <- 1
break
}
}}
}
results <- spriority_data[,2:4]
results$test <- NA
for (i in 1:nrow(spriority_data)){
seq <- reconstruct_sequence(i=i,
data=spriority_data)
if (anyDuplicated(seq$Position_in_sequence)==0) {results$test[i] <- 0}
else {
for (j in unique(seq$Position_in_sequence)){
index <- which(seq$Position_in_sequence == j)
if (length(unique(seq$Time_since_first_intro[index])) > 1){
results$test[i] <- 1
break
}
}
results$test[is.na(results$test)] <- 0
}
}
results <- cbind(results, spriority_data$Number_of_species_in_experiment,
spriority_data$Number_of_species_in_sequence,
spriority_data$Number_of_introduction_events)
getwd()
library(tidyverse)
library(metafor)
library(readr)
spriority_data <- as.data.frame(read.csv("~/Research/sPriority/Meta-analysis/sPriority_database/sPriority_observations_papers_species_16Jan2025.csv")[,2:65])
spriority_data <- spriority_data[-15133,]
spriority_data$Number_of_species_in_sequence <- as.numeric(spriority_data$Number_of_species_in_sequence)
View(spriority_data)
